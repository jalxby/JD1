package home_work_1;

public class Operands {
    public static void main(String[] args) {
        int a = 5;
        int b = 2;
        int c = 8;
        int result;

        result = a + b / c; //5; сперва деление а затем сложение;  результатом деления (c/a) будет ноль так как результат
        // деления целых чисел округляется до нуля
        System.out.println(result);

        result = (a + b) / c;//0; сперва то что в скобках, затем деление; так как результат деления целых чисел
        // округляется до нуля
        System.out.println(result);

        result = (a + b++) / c; //0; то же что и в предыдущем примере только после того как выполнится (a+b),
        //b увеличивается на единицу и становится равным 3
        System.out.println(result);

        b = 2;

        result = (a + b++) / --c; //1; сперва то что в скобках со старым значением b=2 а затем делим на новое значение с=7
        System.out.println(result);

        b = 2;
        c = 8;

        result = (a * b >> b++) / --c; // 0; сперва умножение, затем побитовый сдвиг вправо на старое значение b=2 затем
        //делим на новое значение с=7 и результат деления округляем до нуля
        System.out.println(result);

        b = 2;
        c = 8;
        result = (5 + 7 > 20 ? 68 : 22 * 2 >> b++) / --c; //1; складываем 5+7 затем проверяем результат, если больше 20
        //то 68 делим на новое значение с=7 так как он не больше  20 то 22 умножаем на 2, побитово сдвигаем на старое
        // значение b=2 в результате получаем 11 и делим на новое значение с=7, получаем число 1,571428571428571
        //которое округляется до 1
        System.out.println(result);

        b = 2;
        c = 8;
        //result = (5 + 7 > 20 ? 68 >= 68 : 22 * 2 >> b++) / --c; //ошибка компиляции: мы пытаемся ссылочный тип данных разделить на
        // числовой

        boolean bl;
        bl = 6 - 2 > 3 && 12 * 12 <= 119; //false так как левая часть оператора && верна (4>3) а правая нет (144<=119);
        //оператор && возвращает true если выражение слева и справа true; возвращает false если левая часть false не
        // проверяя правую
        System.out.println(bl);

        bl = true && false; //false; то же что и выше только без вычислений
        System.out.println(bl);

    }


}
